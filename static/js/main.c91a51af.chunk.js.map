{"version":3,"sources":["Components/images/logo.png","Components/Togglenavbar.js","Components/SocialLogoWeb.js","Components/DateRange.js","Components/PatientFilter.js","Components/UserIcons.js","Components/ImageUpload.js","Components/WebcamCapture.js","Components/RegisterForm.js","Components/BodyContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toggleNavBar","id","className","onClick","x","document","getElementById","offsetWidth","style","width","openNav","SocialLogoWeb","openWebiste","window","open","href","cursor","src","RaaGaaMedLogo","alt","DateRange","props","state","StartDate","EndDate","startDate","this","startDateId","endDate","endDateId","onDatesChange","setState","focusedInput","onFocusChange","isOutsideRange","Component","PatientFilter","today","Date","todaydate","getDate","getMonth","getFullYear","currentDate","yesterdayDate","setDate","yesterdayString","currenttoday","tomorrow","tomorrowtext","rotateDiv","$","toggleClass","UserIcons","ImageUpload","file","imagePreviewUrl","e","preventDefault","console","log","reader","FileReader","files","target","onloadend","result","readAsDataURL","$imagePreview","onSubmit","_handleSubmit","type","onChange","_handleImageChange","WebcamCapture","webcamRef","React","useRef","useState","imgSrc","setImgSrc","capture","useCallback","event","imageSrc","current","getScreenshot","cameraonoff","forceScreenshotSourceSize","mirrored","audio","ref","screenshotFormat","border","height","textAlign","display","initialValues","uhid","patient","parentspouse","email","mobileno","altmobileno","address","aadharno","passport","values","validationSchema","Yup","required","phone","matches","length","RegisterForm","formik","useFormik","touched","allowwebcamera","cameraoff","handleSubmit","placeholder","key","value","name","getFieldProps","errors","disabled","selected","hidden","rows","htmlFor","borderRadius","y","getComputedStyle","float","BodyContent","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c91a51af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7ab58fe0.png\";","import React from 'react';\r\nimport './CSS/Togglenavbar.css';\r\nimport {FaUsers} from 'react-icons/fa';\r\n\r\nfunction toggleNavBar() {\r\n\r\n    function openNav() {\r\n        var x = document.getElementById(\"mySidebar\").offsetWidth;\r\n\r\n        if (x === 50) {\r\n            document.getElementById(\"mySidebar\").style.width = \"250px\";\r\n        } else {\r\n            document.getElementById(\"mySidebar\").style.width = \"50px\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"mySidebar\" className=\"sidebar\">\r\n            <p className=\"openbtn\" onClick={() => openNav()}><FaUsers /></p>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default toggleNavBar\r\n","import React from 'react';\r\nimport './CSS/SocialLogoWeb.css';\r\nimport RaaGaaMedLogo from './images/logo.png';\r\nimport {FiPhoneCall} from \"react-icons/fi\";\r\nimport {FaWhatsappSquare} from 'react-icons/fa';\r\nimport {MdMail} from \"react-icons/md\";\r\n\r\nfunction SocialLogoWeb() {\r\n    function openWebiste() {\r\n        window.open('http://www.raagaamed.com/', '_blank');\r\n    }\r\n    return (<> <div className=\"icon-col\">\r\n        <a href=\"#contact\"><FiPhoneCall/></a>\r\n        <a href=\"#home\"><FaWhatsappSquare/></a>\r\n        <a href=\"#news\"><MdMail/></a>\r\n    </div> < div className = \"logo\" > <img style={{cursor: 'pointer', width:'200px'}} onClick= {() => openWebiste()} src={RaaGaaMedLogo} alt=\"RaaGaa+Med logo\"/> < p onClick = {\r\n        () => openWebiste()\r\n    } > www.raagaamed.com < /p>\r\n     </div > </>)\r\n}\r\n\r\nexport default SocialLogoWeb\r\n","import React, {Component} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './CSS/react_dates_overrides.css'\r\nimport 'react-dates/initialize'\r\nimport {DateRangePicker} from 'react-dates'\r\nimport 'react-dates/lib/css/_datepicker.css'\r\n\r\n\r\nclass DateRange extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            StartDate: null,\r\n            EndDate: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DateRangePicker startDate={this.state.startDate}// momentPropTypes.momentObj or null,\r\n                    startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                    endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                    endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                    onDatesChange={({startDate, endDate}) => this.setState({startDate, endDate})} // PropTypes.func.isRequired,\r\n                    focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                    onFocusChange={focusedInput => this.setState({focusedInput})}\r\n                    isOutsideRange={()=> false} // PropTypes.func.isRequired,\r\n                />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DateRange\r\n","import React from 'react';\r\nimport './CSS/PatientFilter.css';\r\nimport DateRange from './DateRange';\r\nimport $ from 'jquery';\r\n// import {GoArrowLeft, GoArrowRight} from \"react-icons/go\";\r\n\r\nfunction PatientFilter() {\r\n\r\n    // -----Today Date------\r\n    var today = new Date();\r\n    var todaydate = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\r\n\r\n    // -------Yesterday Date ------\r\n    var currentDate = new Date();\r\n    var yesterdayDate = new Date(currentDate);\r\n    yesterdayDate.setDate(yesterdayDate.getDate() - 1);\r\n    var yesterdayString = yesterdayDate.getDate() + '-' + (yesterdayDate.getMonth() + 1) + '-' + yesterdayDate.getFullYear();\r\n\r\n    // ------Tomorrow Date------\r\n    var currenttoday = new Date();\r\n    var tomorrow = new Date(currenttoday);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    var tomorrowtext = tomorrow.getDate() + '-' + (tomorrow.getMonth() + 1) + '-' + tomorrow.getFullYear();\r\n\r\n    // --------Rotate Div-------\r\n\r\n    function rotateDiv(){\r\n\r\n        $('#Inpatientrotating').toggleClass('rotated');\r\n        $('#Doctorrotating').toggleClass('rotated');\r\n        $('#patientrotating').toggleClass('rotated');\r\n    }\r\n\r\n    return ( <> <div className=\"patientfilter\">\r\n        <div className=\"float-left\">\r\n            <div className=\"weekcenter\">\r\n                <span onClick={() => rotateDiv()}>This Week</span>\r\n            </div>\r\n            <div id=\"Inpatientrotating\" className=\"InPatientcenter\">\r\n                <p>InPatient List</p>\r\n                <span>32</span>\r\n            </div>\r\n            <div className=\"prev\">\r\n                {/* <GoArrowLeft size=\"20px\" color=\"white\"/> */}\r\n                <span onClick={() => rotateDiv()}>Prev : {yesterdayString}</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"float-left\">\r\n            <div className=\"monthcenter\">\r\n                <span onClick={() => rotateDiv()}>This Month</span>\r\n            </div>\r\n            <div id=\"Doctorrotating\" className=\"Doctorcenter\">\r\n                <p>Doctor List</p>\r\n                <span>20</span>\r\n            </div>\r\n            <div className=\"today\">\r\n                <span onClick={() => rotateDiv()}>Today : {todaydate}</span>\r\n            </div>\r\n        </div>\r\n        <div className=\"float-left\">\r\n            <div className=\"fromtocenter\">\r\n                <span><DateRange/></span>\r\n            </div>\r\n            <div id=\"patientrotating\" className=\"Patientcenter\">\r\n                <p>Patient List</p>\r\n                <span>12</span>\r\n            </div>\r\n            <div className=\"next\">\r\n                <span onClick={() => rotateDiv()}>Next : {tomorrowtext}</span>\r\n                {/* <GoArrowRight size=\"20px\" color=\"white\"/> */}\r\n            </div>\r\n        </div>\r\n    </div> </>\r\n    )\r\n}\r\n\r\nexport default PatientFilter","import React from 'react'\r\nimport './CSS/UserIcon.css'\r\n\r\nimport {FaDesktop, FaDatabase, FaAddressCard, FaUsers} from 'react-icons/fa';\r\nimport {MdPersonAdd, MdDelete} from \"react-icons/md\";\r\nimport {AiOutlineUnorderedList, AiFillCreditCard, AiFillLike} from \"react-icons/ai\";\r\n\r\n\r\nfunction UserIcons() {\r\n    return (\r\n        <>\r\n            <div className=\"float-left usericons\">\r\n                <p><FaDesktop/></p>\r\n                <p><MdPersonAdd/></p>\r\n                <p><AiOutlineUnorderedList/></p>\r\n            </div>\r\n            <div className=\"float-left usericons\">\r\n                <p><AiFillCreditCard/></p>\r\n                <p><FaDatabase/></p>\r\n                <p><AiFillLike/></p>\r\n            </div>\r\n            <div className=\"float-left usericons\">\r\n                <p><FaAddressCard/></p>\r\n                <p><FaUsers/></p>\r\n                <p><MdDelete/></p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserIcons\r\n","import React, { Component } from 'react'\r\nimport './CSS/Imageupload.css'\r\n\r\nclass ImageUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {file: '',imagePreviewUrl: ''};\r\n      }\r\n    \r\n      _handleSubmit(e) {\r\n        e.preventDefault();\r\n        // TODO: do something with -> this.state.file\r\n        console.log('handle uploading-', this.state.file);\r\n      }\r\n    \r\n      _handleImageChange(e) {\r\n        e.preventDefault();\r\n    \r\n        let reader = new FileReader();\r\n        let files = e.target.files[0];\r\n    \r\n        reader.onloadend = () => {\r\n          this.setState({\r\n            file: files,\r\n            imagePreviewUrl: reader.result\r\n          });\r\n        }\r\n       if(files){\r\n        reader.readAsDataURL(files)\r\n       }\r\n      }\r\n    \r\n      render() {\r\n        let {imagePreviewUrl} = this.state;\r\n        let $imagePreview = null;\r\n        if (imagePreviewUrl) {\r\n          $imagePreview = (<img alt=\"Preview\" src={imagePreviewUrl} />);\r\n        } else {\r\n          $imagePreview = (<div className=\"previewText\">Image Preview</div>);\r\n        }\r\n    \r\n        return (\r\n          <div className=\"previewComponent\">\r\n             <div className=\"imgPreview\">\r\n              {$imagePreview}\r\n            </div>\r\n            <form onSubmit={(e)=>this._handleSubmit(e)}>\r\n            \r\n              <input className=\"fileInput\" \r\n                type=\"file\" \r\n                onChange={(e)=>this._handleImageChange(e)} />\r\n                <div>\r\n              \r\n                </div>\r\n                \r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\nexport default ImageUpload\r\n","import React from 'react'\r\nimport Webcam from \"react-webcam\";\r\nimport './CSS/screenshotimage.css'\r\n\r\nfunction WebcamCapture(props) {\r\n    const webcamRef = React.useRef(null);\r\n    const [imgSrc, setImgSrc] = React.useState(null);\r\n\r\n\r\n    const capture = React.useCallback((event) => {\r\n      event.preventDefault();\r\n      const imageSrc = webcamRef.current.getScreenshot();\r\n      setImgSrc(imageSrc);\r\n      }, [webcamRef, setImgSrc]);\r\n\r\n\r\n    \r\n    // const opencamera = false;\r\n  \r\n   \r\n  return (\r\n    <>\r\n    <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n        {props.cameraonoff ? <Webcam\r\n        forceScreenshotSourceSize={false}\r\n        mirrored = {true}\r\n        audio={false}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width={300}\r\n      /> : null}\r\n\r\n    \r\n    </div>\r\n    <div className=\"col-sm-4 offset-sm-2 screenshotpreviw\">\r\n                <div style={{border:'0.5px solid #808080',width:'150px',height:'150px',textAlign:'center'}}>\r\n                  \r\n                {imgSrc && (\r\n                <img src={imgSrc} style={{width:'150px',height:'150px',border:'1px solid white'}}alt=\"preview\"/>\r\n                )}\r\n                </div>\r\n                 <button onClick={capture} style={{display:'block'}}>Take Snapshot</button>\r\n                 {/* <button onClick={opencamersbutton}>Take Snapshot</button> */}\r\n    </div>\r\n    </div>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default WebcamCapture\r\n\r\n// import React, {Component} from 'react';\r\n// import Webcam from \"react-webcam\";\r\n// import './CSS/screenshotimage.css'\r\n\r\n// class WebcamCapture extends Component {\r\n//    constructor(props) {\r\n//      super(props)\r\n   \r\n//      this.state = {\r\n//         accesscamera:false\r\n//      }\r\n//    }\r\n   \r\n//    opencamersbutton = (event) =>{\r\n//     event.preventDefault();\r\n//      this.setState({\r\n//       accesscamera:true\r\n//      })\r\n//    }\r\n//    capture = (event) =>{\r\n//     event.preventDefault();\r\n//     this.setState({\r\n//      accesscamera:false\r\n//     })\r\n//    }\r\n  \r\n//     render() {\r\n//       let cameramater = this.state.accesscamera;\r\n      \r\n     \r\n\r\n//       return(\r\n//   <>\r\n//     <div className=\"row\">\r\n//         <div className=\"col-sm-6\">\r\n//         {cameramater ? <Webcam\r\n//         width={250}\r\n//         /> : null}\r\n\r\n    \r\n//     </div>\r\n//     <div className=\"col-sm-4 offset-sm-2 screenshotpreviw\">\r\n//                 <div style={{border:'0.5px solid #808080',width:'150px',height:'150px',textAlign:'center'}}>\r\n                  \r\n//                 {/* {imageSrc && (\r\n//                 <img src={imageSrc} style={{width:'150px',height:'150px',border:'1px solid white'}}alt=\"preview\"/>\r\n//                 )} */}\r\n//                 </div>\r\n//                  <button onClick={this.capture} style={{display:'block'}}>Take Snapshot</button>\r\n//                  <button onClick={this.opencamersbutton}>Open Camera</button>\r\n//     </div>\r\n//     </div>\r\n//   </>\r\n//   )\r\n// }\r\n// }\r\n\r\n// export default WebcamCapture\r\n","import React, {useState} from 'react'\r\nimport './CSS/Form.css'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport \"yup-phone\";\r\nimport ImageUpload from './ImageUpload'\r\nimport WebcamCapture from './WebcamCapture'\r\n\r\n\r\nconst initialValues = {\r\n    uhid:'',\r\n    patient:'ashok',\r\n    parentspouse:'',\r\n    email:'',\r\n    mobileno:'',\r\n    altmobileno:'',\r\n    address:'',\r\n    aadharno:'',\r\n    passport:''\r\n}\r\n\r\nconst onSubmit = values => {\r\n    console.log('Form data', values)\r\n}\r\n\r\n\r\n\r\n const validationSchema = Yup.object({\r\n    uhid: Yup.string().required('Required!'),\r\n    patient: Yup.string().required('Required!'),\r\n    parentspouse:Yup.string().required('Required!'),\r\n    email:Yup.string().required('Required!').email('Invalid Email'),\r\n    mobileno:Yup.string().phone(\"IN\", true, 'Mobile no must be a valid phone number').required('Required!'),\r\n    altmobileno:Yup.string().phone(\"IN\", true, 'Mobile no must be a valid phone number'),\r\n    address:Yup.string().required('Required!'),\r\n    aadharno:Yup.string().matches(/^[0-9]{12}$/, 'Aadhar no must be 12 digit').required('Required!'),\r\n    passport:Yup.string().length(8, 'Passport must be 8 character')\r\n })\r\n\r\nfunction RegisterForm() {\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n            onSubmit,\r\n            validationSchema\r\n            // validate\r\n    })\r\n\r\n    console.log('form visited', formik.touched)\r\n\r\n    const [allowwebcamera, cameraoff] = useState(false)\r\n    // const [selectedhospital] = useState(\"selected\")\r\n    \r\n\r\n    function uploadImage(e){\r\n        e.preventDefault();\r\n        var x = document.getElementById(\"UploadImagefromcomputer\");\r\n        var y = document.getElementById(\"Captureimagefromwebcam\");\r\n        console.log(x,y)\r\n        if (window.getComputedStyle(x).display === \"none\") {\r\n            x.style.display = \"block\";\r\n            y.style.display = \"none\";\r\n        }else {\r\n            x.style.display = \"none\";\r\n        }\r\n        \r\n        cameraoff(false);\r\n    }\r\n\r\n    function capturePhoto(e) {\r\n        e.preventDefault();\r\n        let x = document.getElementById(\"UploadImagefromcomputer\");\r\n        let y = document.getElementById(\"Captureimagefromwebcam\");\r\n        console.log(x,y)\r\n        if (window.getComputedStyle(y).display === \"none\") {\r\n            y.style.display = \"block\";\r\n            x.style.display = \"none\";\r\n        }\r\n        else {\r\n            y.style.display = \"none\";\r\n        }\r\n        \r\n        cameraoff(true);\r\n    }\r\n    function cancel(){\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <form className=\"formSize\" onSubmit={formik.handleSubmit}>\r\n    <div className=\"row Formsetstye\">\r\n        <div className=\"col-sm-12 Requiredfieldspace\">\r\n            <span className=\"Requiredfield\">*</span>\r\n            Required Field\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <label>Official Info:</label>\r\n            <select  onChange='' placeholder=\"select options\" className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                {/* <option disabled  hidden value='selected'>Select Branch Hospital</option> */}\r\n                <option key=\"select options\" value=''></option>\r\n                <option value=\"1\">One</option>\r\n                <option value=\"2\">Two</option>\r\n                <option value=\"3\">Three</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <label>Contact Details:</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control bg-dark\"\r\n                placeholder=\"Mobile Number\"\r\n                name=\"mobileno\"\r\n                {...formik.getFieldProps('mobileno')} />\r\n                {formik.touched.mobileno && formik.errors.mobileno ? \r\n                (<span className=\"errormessage\">{formik.errors.mobileno}</span>) : null}\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control bg-dark\"\r\n                placeholder=\"UHID *\"\r\n                id=\"number\"\r\n                name=\"uhid\"\r\n                {...formik.getFieldProps('uhid')} />\r\n                {formik.touched.uhid && formik.errors.uhid ? \r\n                (<span className=\"errormessage\">{formik.errors.uhid}</span>) : null}\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control bg-dark\"\r\n                placeholder=\"Alternative Mobile Number\"\r\n                id=\"number\"\r\n                name=\"altmobileno\"\r\n                {...formik.getFieldProps('altmobileno')}/>\r\n                {formik.touched.altmobileno && formik.errors.altmobileno ? \r\n                (<span className=\"errormessage\">{formik.errors.altmobileno}</span>) : null}\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control bg-dark\"\r\n                placeholder=\"Aadhar Number\"\r\n                id=\"number\"\r\n                name='aadharno'\r\n                {...formik.getFieldProps('aadharno')}/>\r\n                {formik.touched.aadharno && formik.errors.aadharno ? \r\n                (<span className=\"errormessage\">{formik.errors.aadharno}</span>) : null}\r\n                \r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <input\r\n                type=\"email\"\r\n                className=\"form-control bg-dark\"\r\n                placeholder=\"Email ID\"\r\n                name='email'\r\n                {...formik.getFieldProps('email')} />\r\n                {formik.touched.email && formik.errors.email ? \r\n                (<span className=\"errormessage\">{formik.errors.email}</span>) : null}\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <label>Personal Info:</label>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                        <option disabled selected hidden>Select</option>\r\n                        <option value=\"1\">Mr.</option>\r\n                        <option value=\"2\">Mrs.</option>\r\n                        <option value=\"3\">Ms.</option>\r\n                        <option value=\"4\">Miss</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control bg-dark\"\r\n                        placeholder=\"Patient Name *\"\r\n                        id=\"number\"\r\n                        name='patient'\r\n                        {...formik.getFieldProps('patient')}/>\r\n                        {formik.touched.patient && formik.errors.patient ? \r\n                (<span className=\"errormessage\">{formik.errors.patient}</span>) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <label>Address Info:</label>\r\n\r\n            <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                <option disabled selected hidden>Select Occuption</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2.</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                    <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                        <option disabled selected hidden>Select</option>\r\n                        <option value=\"1\">Mr.</option>\r\n                        <option value=\"2\">Mrs.</option>\r\n                        <option value=\"3\">Ms.</option>\r\n                        <option value=\"4\">Miss</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control bg-dark\"\r\n                        placeholder=\"Parents/Spouse Name *\"\r\n                        id=\"number\"\r\n                        name='parentspouse'\r\n                        {...formik.getFieldProps('parentspouse')} />\r\n                        {formik.touched.parentspouse && formik.errors.parentspouse ? \r\n                (<span className=\"errormessage\">{formik.errors.parentspouse}</span>) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <textarea\r\n                className=\"form-control bg-dark\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                placeholder=\"Address\"\r\n                rows=\"1\"\r\n                name='address'\r\n                {...formik.getFieldProps('address')}></textarea>\r\n                {formik.touched.address && formik.errors.address ? \r\n                (<span className=\"errormessage\">{formik.errors.address}</span>) : null}\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-sm-7 textalign\">\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineRadio1\"\r\n                            value=\"option1\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Male</label>\r\n                    </div>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name=\"inlineRadioOptions\"\r\n                            id=\"inlineRadio2\"\r\n                            value=\"option2\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Female</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control bg-dark\"\r\n                        placeholder=\"DOB *\"\r\n                        id=\"number\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n\r\n            <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                <option disabled selected hidden>Select Department</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2.</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control bg-dark\"\r\n                placeholder=\"Passport Number\"\r\n                id=\"number\"\r\n                name=\"passport\"\r\n                {...formik.getFieldProps('passport')}/>\r\n                {formik.touched.passport && formik.errors.passport ? \r\n                (<span className=\"errormessage\">{formik.errors.passport}</span>) : null}\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n\r\n            <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                <option disabled selected hidden>Select Consultant</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2.</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-sm-12\" style={{border:'1px solid white',borderRadius:'3px'}}>\r\n        <div className=\"row\">\r\n        <div className=\"col-sm-6 padddingbottom\" style={{textAlign:'center'}}>\r\n            <button className=\"submitButton\" onClick={uploadImage}>Upload Photo</button>\r\n\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\" style={{textAlign:'center'}}>\r\n            <button className=\"submitButton\" onClick={capturePhoto}>Capture Photo</button>\r\n\r\n        </div>\r\n\r\n        <div className=\"col-sm-12 padddingbottom\" id=\"UploadImagefromcomputer\">\r\n            <ImageUpload/>\r\n        </div>\r\n        <div className=\"col-sm-12 padddingbottom\" id=\"Captureimagefromwebcam\">\r\n            <WebcamCapture cameraonoff={allowwebcamera}/>\r\n         </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <label>Mode of Payment:</label>\r\n\r\n            <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                <option disabled selected hidden>Select</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2.</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-sm-6 padddingbottom\">\r\n            <label>Refered by:</label>\r\n\r\n            <select className=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                <option disabled selected hidden>Select</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2.</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n            </select>\r\n        </div>\r\n        <div className=\"col-sm-4 offset-sm-8\">\r\n            <div\r\n                style={{\r\n                float: \"right\"\r\n            }}>\r\n                \r\n                <input type=\"button\" className=\"btn btn-danger\" value=\"Reset\" onClick={cancel}/>\r\n                <button type=\"submit\" className=\"btn btn-info\">Save & Next</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react';\r\nimport './CSS/BodyContent.css';\r\n// import RegistrationForm from './RegistrationForm'\r\nimport RegisterForm from './RegisterForm'\r\n\r\nfunction BodyContent() {\r\n    return (\r\n        <>\r\n            <div className=\"gallery-wrap\">\r\n                <div className=\"item item-1\">\r\n                    <div className=\"hide\">\r\n                        {/* <RegistrationForm /> */}\r\n                        <RegisterForm />\r\n                     </div>\r\n                    <h2 className=\"registrationTitle\">Registration</h2>\r\n                </div>\r\n                <div className=\"item item-2\">\r\n                    <h2>\r\n                        Patient Appointment\r\n                    </h2>\r\n                </div>\r\n                <div className=\"item item-3\">\r\n                    <h2>Medical Report</h2>\r\n                </div>\r\n                <div className=\"item item-4\">\r\n                    <h2>Appoinment History</h2>\r\n                </div>\r\n                <div className=\"item item-5\">\r\n                    <h2>Straffs List</h2>\r\n                </div>\r\n                <div className=\"item item-6\">\r\n                    <h2>List</h2>\r\n                </div>\r\n                <div className=\"item item-7\">\r\n                    <h2>Empty</h2>\r\n                </div>\r\n                <div className=\"item item-8\">\r\n                    <h2>Empty List</h2>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BodyContent\r\n","import React from 'react';\nimport './Components/CSS/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Togglenavbar from './Components/Togglenavbar';\nimport SocialLogoWeb from './Components/SocialLogoWeb';\nimport PatientFilter from './Components/PatientFilter';\nimport UserIcons from './Components/UserIcons';\nimport BodyContent from './Components/BodyContent';\n\nfunction App() {\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row header-bg\">\n                <div className=\"nopadding\">\n                    <UserIcons/>\n                </div>\n                <div className=\"nopadding\">\n                    <PatientFilter/>\n                </div>\n                <div className=\"nopadding\">\n                    <div className=\"titlename\">\n                        <h5>Sri Narayana Eductional And Medical Research Center</h5>\n                        <p>334,Chenglepet Main Road,Chenglepet</p>\n                    </div>\n                </div>\n                <div className=\"nopadding\">\n                    <SocialLogoWeb/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"content-width float-left\">\n                    <BodyContent/>\n                </div>\n                <div className=\"togglenav float-right\">\n                    <Togglenavbar/>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}